!*
FINISH
/CLEAR,START
/COM,ANSYS RELEASE 2020 R2           BUILD 20.2      UP20200601       18:48:01
/input,start,ans,'C:\Program Files\ANSYS Inc\ANSYS Student\v211\ansys\apdl\'
!/input,start,ans,'D:\Programs\ANSYS Inc\ANSYS Student\v211\ansys\apdl\'

!* Importing data from Mesh file
/INPUT,A00_10_MeshAux_MatchID,mac

!* -------Applying Left Boundary conditions---------

*DIM,bc_L,ARRAY,nodes_L,3
*CREATE,ansuitmp
*VREAD,bc_L(1,1),Mesh_Left_DIC2FEM,dat,,JIK,3,nodes_L
(F12.6,'  ',F16.10,'  ',F16.10)
*END
/INPUT,ansuitmp

!*
ALLSEL,ALL

*DO, i, 1, nodes_L, 1
    D,bc_L(i,1),UX,bc_L(i,2)
    D,bc_L(i,1),UY,bc_L(i,3)
*ENDDO


!* -------Applying Right Boundary conditions---------

*DIM,bc_R,ARRAY,nodes_R,3
*CREATE,ansuitmp
*VREAD,bc_R(1,1),Mesh_Right_DIC2FEM,dat,,JIK,3,nodes_R
(F12.6,'  ',F16.10,'  ',F16.10)
*END
/INPUT,ansuitmp

!*
ALLSEL,ALL

*DO, i, 1, nodes_R, 1
    D,bc_R(i,1),UX,bc_R(i,2)
    D,bc_R(i,1),UY,bc_R(i,3)
*ENDDO

ALLSEL,ALL
FINISH

/SOLU
ANTYPE,STATIC

SOLVE 		! NUMERICAL ANALYSIS
FINISH
/POST1
SET,FIRST

! :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: !
! ELEMENT SOLUTION
! :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: !
*GET,tnEL,ELEM,,COUNT,,,		! total number of elements over S2
*GET,emin,ELEM,,NUM,MIN			! find out the minimum element number
*DIM,Xc_S2,ARRAY,tnEL,1			! Xc - X coordinate of the centroid of the elements
*DIM,Yc_S2,ARRAY,tnEL,1			! Yc - Y coordinate of the centroid of the elements
*DIM,Ux_S2,ARRAY,tnEL,1			! Ux - x displacement component at the centroid of the elements
*DIM,Uy_S2,ARRAY,tnEL,1			! Ux - x displacement component at the centroid of the elements
*DIM,Ex_S2,ARRAY,tnEL,1			! Ex - elements average longitudinal strain component
*DIM,Ey_S2,ARRAY,tnEL,1			! Ey - elements average transverse strain component
*DIM,Exy_S2,ARRAY,tnEL,1		! Exy - elements average shear strain component
! -
ETABLE,etXc,CENT,X			! defines an element table etXc for the centroid-X location
ETABLE,etYc,CENT,Y
ETABLE,etUx,U,X
ETABLE,etUy,U,Y
ETABLE,etEx,EPEL,X
ETABLE,etEy,EPEL,Y
ETABLE,etExy,EPEL,XY
! -

*VGET,Xc_S2(1),ELEM,emin,ETAB,etXc	 ! Xc
*VGET,Yc_S2(1),ELEM,emin,ETAB,etYc	 ! Yc
*VGET,Ux_S2(1),ELEM,emin,ETAB,etUx	 ! Ux
*VGET,Uy_S2(1),ELEM,emin,ETAB,etUy	 ! Uy
*VGET,Ex_S2(1),ELEM,emin,ETAB,etEx	 ! ex
*VGET,Ey_S2(1),ELEM,emin,ETAB,etEy	 ! ey
*VGET,Exy_S2(1),ELEM,emin,ETAB,etExy ! exy
! -

!*CREATE,ansuitmp
!*CFOPEN,Elem_fea,dat,,
!*VWRITE,Xc_S2(1),Yc_S2(1),Ux_S2(1),Uy_S2(1),Ex_S2(1),Ey_S2(1),Exy_S2(1)
!(F16.10,'  ',F16.10,'  ',E16.10,'  ',E16.10,'  ',E16.10,'  ',E16.10,'  ',E16.10)
!*CFCLOS
!*END
!/INPUT,ansuitmp

! ============================================================================== !
! SCALAR RESULTS:
! ============================================================================== !
*DIM,rfx_l,ARRAY,nodes_L,1			!  FX at left boundary
*DIM,rfx_r,ARRAY,nodes_R,1			!  FX at right boundary
*DIM,rfy_l,ARRAY,nodes_L,1			!  FY at left boundary
*DIM,rfy_r,ARRAY,nodes_R,1			!  FY at right boundary

! ----------------------- Left Boundary-----------------------------

*DO,i,1,nodes_L,1						! nodes_L=number of nodes at left boundary
*GET,rfx_l(i,1),NODE,Coord_nodes_L(i,1),RF,FX	! FX Component
*ENDDO
*VSCFUN,f_res_x_l,SUM,rfx_l      	 ! Sum of FX at left boundary

*DO,i,1,nodes_L,1						! nodes_L=number of nodes at left boundary
*GET,rfy_l(i,1),NODE,Coord_nodes_L(i,1),RF,FY	! FY Component
*ENDDO
*VSCFUN,f_res_y_l,SUM,rfy_l			! Sum of FY at left boundary

! ----------------------- Right Boundary-----------------------------

*DO,i,1,nodes_R,1					! nodes_R=number of nodes at right boundary
*GET,rfx_r(i,1),NODE,Coord_nodes_R(i,1),RF,FX	! FX Component
*ENDDO
*VSCFUN,f_res_x_r,SUM,rfx_r       ! Sum of FY at left boundary

*DO,i,1,nodes_R,1					! nodes_R=number of nodes at right boundary
*GET,rfy_r(i,1),NODE,Coord_nodes_R(i,1),RF,FY	! FY Component
*ENDDO
*VSCFUN,f_res_y_r,SUM,rfy_r		! Sum of FY at right boundary

! ----------------------- Writing Sum of FX and FY -----------------------------

*CREATE,ansuitmp
*CFOPEN,ScalarsFE_LeftBoundary,dat,,
*VWRITE,f_res_x_l,f_res_y_l
(F20.10,' ', F20.10)
*CFCLOS
*END
/INPUT,ansuitmp

*CREATE,ansuitmp
*CFOPEN,ScalarsFE_RightBoundary,dat,,
*VWRITE,f_res_x_r,f_res_y_r
(F20.10,' ', F20.10)
*CFCLOS
*END
/INPUT,ansuitmp

! --------------------- Writing nodal values of FX and FY ---------------------

*CREATE,ansuitmp
*CFOPEN,Nodal_forcesFE_LeftBoundary,dat,,
*VWRITE,rfx_l(1,1),rfy_l(1,1)
(F20.10,' ', F20.10)
*CFCLOS
*END
/INPUT,ansuitmp

*CREATE,ansuitmp
*CFOPEN,Nodal_forces_FE_RightBoundary,dat,,
*VWRITE,rfx_r(1,1),rfy_r(1,1)
(F20.10,' ', F20.10)
*CFCLOS
*END
/INPUT,ansuitmp

! :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: !
! NODAL SOLUTION
! :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: !
ALLSEL,ALL
*GET,total_nodes,NODE,,COUNT			! total number of nodes
! Definition of matrices
!*
*DIM,nodes,ARRAY,total_nodes,1			! List of the nodes, identified by its number
*VGET,nodes(1,1),NODE,,NLIST
*DIM,x_fem,ARRAY,total_nodes,1			! x nodal coordinates
*DIM,y_fem,ARRAY,total_nodes,1			! y nodal coordinates over S2
*DIM,ux_fem,ARRAY,total_nodes,1			! x displacement component over S2
*DIM,uy_fem,ARRAY,total_nodes,1			! y displacement component over S2
*DIM,ex_fem,ARRAY,total_nodes,1			! ex_S2 - x normal strain over S2
*DIM,ey_fem,ARRAY,total_nodes,1			! ey_S2 - y normal strain over S2
*DIM,exy_fem,ARRAY,total_nodes,1		! exy_S2 - xy shear strain over S2

*DO,i,1,total_nodes,1
	*GET,x_fem(i,1),NODE,nodes(i,1),LOC,X		! LOC - nodal coordinates: x(i)=NX(node(i))
	*GET,y_fem(i,1),NODE,nodes(i,1),LOC,Y
	*GET,ux_fem(i,1),NODE,nodes(i,1),U,X		! U - displacement components
	*GET,uy_fem(i,1),NODE,nodes(i,1),U,Y
	*GET,ex_fem(i,1),NODE,nodes(i,1),EPEL,X	! EPEL - elastic strain components
	*GET,ey_fem(i,1),NODE,nodes(i,1),EPEL,Y
	*GET,exy_fem(i,1),NODE,nodes(i,1),EPEL,XY
*ENDDO

! Writing nodal solution

*CREATE,ansuitmp
*CFOPEN,Nodal_fea,dat,,
*VWRITE,nodes(1),x_fem(1),y_fem(1),ux_fem(1),uy_fem(1),ex_fem(1),ey_fem(1),exy_fem(1)
(F10.1,'  ',F12.6,'  ',F12.6,'  ',E16.10,'  ',E16.10,'  ',E16.10,'  ',E16.10,'  ',E16.10)
*CFCLOS
*END
/INPUT,ansuitmp


! Writing nodal forces

ALLSEL,ALL

*DIM,nodal_fx,ARRAY,total_nodes,1			! FX
*DIM,nodal_fy,ARRAY,total_nodes,1			! FY

*DO,i,1,total_nodes,1
	*GET,nodal_fx(i,1),NODE,nodes(i,1),RF,FX		! FX
	*GET,nodal_fy(i,1),NODE,nodes(i,1),RF,FY		! FY
*ENDDO

*CREATE,ansuitmp
*CFOPEN,Nodal_forces,dat,,
*VWRITE,nodes(1),nodal_fx(1),nodal_fy(1)
(F10.1,'  ',E20.10,'  ',E20.10)
*CFCLOS
*END
/INPUT,ansuitmp

*VSCFUN,totalfx,SUM,nodal_fx
*VSCFUN,totalfy,SUM,nodal_fy

*CREATE,ansuitmp
*CFOPEN,total_force,dat,,
*VWRITE,totalfx,totalfy
(E20.10,'  ',E20.10)
*CFCLOS
*END
/INPUT,ansuitmp


!---------------------------------------Connectivity matrix---------------------------------------

ALLSEL,ALL
*GET,total_elements,ELEM,0,COUNT,,, 	! Counts the number of elements
*DIM,elements,ARRAY,total_elements,1	! List of the elements, identified by its number
*VGET,elements(1,1),ELEMENT,,ELIST
*DIM,connectivity,ARRAY,total_elements,5


*DO, i, 1, total_elements,1
	connectivity(i,1)=elements(i,1)
	connectivity(i,2)=NELEM(elements(i,1),1)
	connectivity(i,3)=NELEM(elements(i,1),2)
	connectivity(i,4)=NELEM(elements(i,1),3)
	connectivity(i,5)=NELEM(elements(i,1),4)
*ENDDO

*CREATE,ansuitmp
*CFOPEN,Connectivity,dat,,
*VWRITE,elements(1),connectivity(1,2),connectivity(1,3),connectivity(1,4),connectivity(1,5)
(F10.1,'  ',F10.1,'  ',F10.1,'  ',F10.1,'  ',F10.1)
*CFCLOS
*END
/INPUT,ansuitmp

!/post1
!/output,A00_10_nodes_s27,txt
!NSLE,S,CORNER
!nlist
!/out
!/post1
!/output,A00_10_elements_s27,txt
!! elist,all,,,0,0 ! equivalent to ELIST
!Elist
!/out
!/post1
!/output,A00_10_displacement_s27,txt
!/format,4
!PRNSOL, U
!/out

!* Writing nodes and elements file
/INPUT,db2NodEleDis,mac

!* Writing nodal displacements file
/INPUT,db2NodeDispl,mac